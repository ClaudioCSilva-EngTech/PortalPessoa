// scripts/test-apis.js
// Script para testar as APIs implementadas (usando fetch nativo do Node.js 18+)

// Dados de teste
const testData = {
  desligados: [
    {
      razaoSocialEmpresa: "Empresa Teste Ltda",
      local: "S√£o Paulo",
      sufixoCnpj: "0001",
      idContratado: "TEST001",
      nomeCompleto: "Jo√£o Teste Silva",
      vinculo: "CLT",
      dataAdmissao: "01/01/2020",
      cargo: "Analista de Sistemas",
      codigoEstrutura: "TI001",
      centroCusto: "Tecnologia",
      situacao: "Desligado",
      dataInicioSituacao: "15/12/2024",
      dataRescisao: "15/12/2024",
      dataNascimento: "15/03/1990",
      estadoCivil: "Solteiro",
      grauInstrucao: "Superior Completo",
      siglaSexo: "M",
      segmentoEtnicoRacial: "Branco",
      idHierarquia: "H001",
      hierarquia: "Analista"
    },
    {
      razaoSocialEmpresa: "Empresa Teste Ltda",
      local: "S√£o Paulo",
      sufixoCnpj: "0001",
      idContratado: "TEST002",
      nomeCompleto: "Maria Teste Santos",
      vinculo: "CLT",
      dataAdmissao: "01/06/2021",
      cargo: "Desenvolvedora Frontend",
      codigoEstrutura: "TI002",
      centroCusto: "Tecnologia",
      situacao: "Desligado",
      dataInicioSituacao: "20/12/2024",
      dataRescisao: "20/12/2024",
      dataNascimento: "22/08/1985",
      estadoCivil: "Casado",
      grauInstrucao: "Superior Completo",
      siglaSexo: "F",
      segmentoEtnicoRacial: "Pardo",
      idHierarquia: "H002",
      hierarquia: "Analista"
    }
  ]
};

// Fun√ß√£o para testar modelos e controllers localmente
async function testModels() {
  console.log('üß™ Testando modelos e controllers localmente...\n');

  try {
    // Importar modelos e controllers
    const Desligado = require('../src/models/Desligado');
    const Vaga = require('../src/models/Vaga');
    const DesligadoController = require('../src/controllers/DesligadoController');
    const VagaController = require('../src/controllers/VagaController');
    const DesligadoService = require('../src/services/DesligadoService');

    console.log('‚úÖ Todos os modelos e controllers foram importados com sucesso');
    console.log('');

    // Testar valida√ß√£o dos dados
    console.log('1Ô∏è‚É£ Testando valida√ß√£o de dados...');
    const isValid = DesligadoService.validarDadosObrigatorios(testData.desligados[0]);
    console.log('‚úÖ Valida√ß√£o de dados:', isValid ? 'Passou' : 'Falhou');
    console.log('');

    // Testar mapeamento de hierarquia
    console.log('2Ô∏è‚É£ Testando mapeamento de hierarquia...');
    const hierarquia = DesligadoService.mapearHierarquia('Analista de Sistemas');
    console.log('‚úÖ Hierarquia mapeada:', hierarquia);
    console.log('');

    // Testar mapeamento de tipo de contrata√ß√£o
    console.log('3Ô∏è‚É£ Testando mapeamento de tipo de contrata√ß√£o...');
    const tipoContratacao = DesligadoService.mapearTipoContratacao('CLT');
    console.log('‚úÖ Tipo de contrata√ß√£o mapeado:', tipoContratacao);
    console.log('');

    // Testar mapeamento de desligado para vaga
    console.log('4Ô∏è‚É£ Testando mapeamento de desligado para vaga...');
    const vagaData = DesligadoService.mapearDesligadoParaVaga(testData.desligados[0]);
    console.log('‚úÖ Vaga mapeada - C√≥digo:', vagaData.codigo_vaga);
    console.log('‚úÖ Posi√ß√£o:', vagaData.detalhe_vaga.posicaoVaga);
    console.log('‚úÖ Setor:', vagaData.detalhe_vaga.setor);
    console.log('');

    // Testar defini√ß√£o de urg√™ncia
    console.log('5Ô∏è‚É£ Testando defini√ß√£o de urg√™ncia...');
    const urgencia = DesligadoService.definirUrgencia(testData.desligados[0]);
    console.log('‚úÖ Urg√™ncia definida:', urgencia);
    console.log('');

    console.log('üéâ Todos os testes locais foram conclu√≠dos com sucesso!');
    console.log('');
    console.log('üìã Resumo dos componentes implementados:');
    console.log('- ‚úÖ Modelo Desligado');
    console.log('- ‚úÖ DesligadoController');
    console.log('- ‚úÖ DesligadoService');
    console.log('- ‚úÖ VagaController (m√©todo criarVagasEmLote)');
    console.log('- ‚úÖ Rotas desligados');
    console.log('- ‚úÖ Rota vagas/lote');
    console.log('');
    console.log('üöÄ Para testar com servidor rodando, use:');
    console.log('   curl -X POST http://localhost:3000/desligados/check-existing \\');
    console.log('   -H "Content-Type: application/json" \\');
    console.log('   -d \'{"idsContratados": ["TEST001", "TEST002"]}\'');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
    console.error('Stack:', error.stack);
  }
}

// Executar testes se o script for chamado diretamente
if (require.main === module) {
  testModels();
}

module.exports = { testModels, testData };
